/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathtutor;

import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.text.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Lenovo ThinkPad L520
 */
public class TestMode extends javax.swing.JFrame {
    static int randomNum1;// integer variable declared to hold the first randomly generated number
    static int randomNum2;
    static int answer;
    static Random randomNums = new Random();// a Random object randomNums instantiated, to generate numbers randomly
    static String choice;
    static int userAns =0;
    static String lNname,topicSelected;
    static int userScore = 0;
    static int questionNum;
    static int click =0;
    static float percent = 0;
    static FileWriter fileWriter;
    static PrintWriter printWriter;
    static DateFormat dateFormater = new SimpleDateFormat("dd/MM/yyyy HH:mm");
    static Date currentDate = new Date();
    static String date = dateFormater.format(currentDate);
    static String tempQuestion = "";
    static ArrayList<String> testQuestions = new ArrayList<>();
    static String [] userComments = {"Well Done", "Great Work", "You are a Star"};
    static int remainder;
    Connection con;
    Statement stmt;
        
    /**
     * Creates new form TestMode
     */
    public TestMode() {
        initComponents();
        //this.setLocationRelativeTo(null);
        lNname = JOptionPane.showInputDialog(TestMode.this,"Enter Learner Name :");
        questionNum = Integer.parseInt(JOptionPane.showInputDialog(TestMode.this,"Enter Number of Question"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtAnswer = new javax.swing.JTextField();
        jBtnExit = new javax.swing.JButton();
        jArithLabel = new javax.swing.JLabel();
        jBtnNxt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLblN1 = new javax.swing.JLabel();
        jLblN2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Mode");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        jTxtAnswer.setName("jTxtAnswer"); // NOI18N
        jTxtAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtAnswerActionPerformed(evt);
            }
        });

        jBtnExit.setBackground(new java.awt.Color(255, 51, 51));
        jBtnExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnExit.setForeground(new java.awt.Color(255, 255, 255));
        jBtnExit.setText("EXIT");
        jBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExitActionPerformed(evt);
            }
        });

        jArithLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jArithLabel.setText("&");
        jArithLabel.setName("jArithLabel"); // NOI18N

        jBtnNxt.setBackground(new java.awt.Color(0, 102, 255));
        jBtnNxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnNxt.setForeground(new java.awt.Color(255, 255, 255));
        jBtnNxt.setText("NEXT");
        jBtnNxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNxtActionPerformed(evt);
            }
        });

        jLabel2.setText("=");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Test Mode");

        jLblN1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLblN1.setText("3");
        jLblN1.setName("jLblN1"); // NOI18N

        jLblN2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLblN2.setText("6");
        jLblN2.setName("jLblN2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnNxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLblN1)
                                .addGap(18, 18, 18)
                                .addComponent(jArithLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jLblN2)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTxtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBtnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jArithLabel)
                    .addComponent(jLabel2)
                    .addComponent(jTxtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblN1)
                    .addComponent(jLblN2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnNxt)
                    .addComponent(jBtnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnNxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNxtActionPerformed
        // TODO add your handling code here:
        click++;
        try
        {
            if (click >=questionNum)
            {
                JOptionPane.showMessageDialog(null, "Thank You ");                           
                ReportWriter(topicSelected, testQuestions, click);
                testQuestions.clear();
                Learner();
                new Menu().setVisible(true);
                this.dispose();
            }
            else
            {            
                Mode(choice);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(TestMode.this,e.getMessage());  
        }
    }//GEN-LAST:event_jBtnNxtActionPerformed

    private void jTxtAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtAnswerActionPerformed

    private void jBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExitActionPerformed
        // TODO add your handling code here:
        try 
        {
            int i = JOptionPane.showConfirmDialog(null, "Are You Sure","Select an Option",JOptionPane.YES_NO_OPTION);
            if (i==0)
            {
                new Menu().setVisible(true);
                this.dispose();
            }
        } // end try
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(TestMode.this,e.getMessage());
        } // end catch 
    }//GEN-LAST:event_jBtnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestMode().setVisible(true);
                
                
            }
        });
    }
    
    public static void AdditionTest() throws IOException
    {
        /* Method Name     : public static void AdditionPractice()
         * Purpose         : Ask the user Addition Mathmatics related Questions,
         *                 - for as long as the user respond by pressing the Next button otherwise,
         *                 - the program terminates presses the Exit and the Menu is redisplayed for the user to choose a different
         *                 - mode if the user is willing to give other Topics a try.
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        topicSelected = "Addition";
        
        jTxtAnswer.setText("");
        jArithLabel.setText("+");//sets arithmetic sign
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 + randomNum2;
        
        // user's anwser is read and assigned to a variable
        userAns=Integer.parseInt(JOptionPane.showInputDialog("What is the answer to the following problem?"));

        // user's answer is tested to see whether it is correct or Incorrect
        if(answer==userAns)
        {
            ++userScore;
            JOptionPane.showMessageDialog(null,"*****"+userComments[randomNums.nextInt(2)]+" *****");
            tempQuestion += ": Your Answer was: "+userAns+" : Correct.";    
        }
        else//course of action taken if the above question was not properly answered
        {
            JOptionPane.showMessageDialog(null,"!!!!Sorry  Your Answer is Incorrect!!!!\nAnswer was : "+answer);
            tempQuestion += ": Your Answer was: "+userAns+" : Incorrect.";            
        }
        testQuestions.add(tempQuestion);
        tempQuestion="";
                   
        jTxtAnswer.setText(""+answer);
        answer =0;
           
    } 
    public static void SubtractionTest() throws IOException
    {
        /* Method Name     : public static void SubtractionTest()
         * Purpose         : Ask the user Subtraction related Questions,
         *                 - dipslay a complimenting message if the user provides a correct answer,
         *                 - and an appropriate message if the answer is incorrect
         *                 - display Topic details, asks the user the total number of Questions they are willing to go through
         *                 - Writes the user's record a the end of each Session
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        topicSelected = "Subtraction";

        jTxtAnswer.setText("");
        jArithLabel.setText("-");//sets arithmetic sign

        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
            
        if(randomNum1 < randomNum2)
            SwapValues();
     
        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 - randomNum2;
        
        // user's anwser is read and assigned to a variable
        userAns=Integer.parseInt(JOptionPane.showInputDialog("What is the answer to the following problem?"));

        // user's answer is tested to see whether it is correct or Incorrect
        if(answer==userAns)
        {
            ++userScore;
            JOptionPane.showMessageDialog(null,"*****"+userComments[randomNums.nextInt(2)]+" *****");
            tempQuestion += ": Your Answer was: "+userAns+" : Correct.";    
        }
        else//course of action taken if the above question was not properly answered
        {
            JOptionPane.showMessageDialog(null,"!!!!Sorry  Your Answer is Incorrect!!!!\nAnswer was : "+answer);
            tempQuestion += ": Your Answer was: "+userAns+" : Incorrect.";
            
        }
        testQuestions.add(tempQuestion);
        tempQuestion="";
                 
        jTxtAnswer.setText(""+answer);
        answer =0;
            
    }
    public static void MultiplicationTest() throws IOException
    {
        /* Method Name     : public static void MultiplicationTest()
         * Purpose         : Ask the user Multiplication related Questions,
         *                 - dipslay a complimenting message if the user provides a correct answer,
         *                 - and an appropriate message if the answer is incorrect
         *                 - display Topic details, asks the user the number of Questions they are willing to go through
         *                 - Writes the user's record a the end of each Session
         * Re-use          : Global variable name, userInput, userScore, topicSelected
         * Input           : None
         *
         * Output          : None
         */
        topicSelected = "Multiplication";
        jTxtAnswer.setText("");
        jArithLabel.setText("*");//sets arithmetic sign
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 * randomNum2;
        
        // user's anwser is read and assigned to a variable
        userAns=Integer.parseInt(JOptionPane.showInputDialog("What is the answer to the following problem?"));

        // user's answer is tested to see whether it is correct or Incorrect
        if(answer==userAns)
        {
            ++userScore;
            JOptionPane.showMessageDialog(null,"*****"+userComments[randomNums.nextInt(2)]+" *****");
            tempQuestion += ": Your Answer was: "+userAns+" : Correct.";    
        }
        else//course of action taken if the above question was not properly answered
        {
            JOptionPane.showMessageDialog(null,"!!!!Sorry  Your Answer is Incorrect!!!!\nAnswer was : "+answer);
            tempQuestion += ": Your Answer was: "+userAns+" : Incorrect.";
            
        }
        testQuestions.add(tempQuestion);
        tempQuestion="";
        
            
        jTxtAnswer.setText(""+answer);
        answer =0;
           
    } 
    public static void DivisionTest() throws IOException
    {
        /* Method Name     : public static void Division()
         * Purpose         : Ask the user Division Mathmatics related Questions,
         *                 - dipslay a complimenting message if the user provides a correct answer,
         *                 - and an appropriate message if the answer is incorrect
         *                 - display Topic details, asks the user the number of Questions they are willing to go through
         *                 - Writes the user's performance record a the end of each Session
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        topicSelected = "Division";
        jTxtAnswer.setText("");
        jArithLabel.setText("/");//sets arithmetic sign
         
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
            
        if(randomNum1 < randomNum2)
            SwapValues();
        
        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));
         if(randomNum2 != 0)
        {
            answer = randomNum1 / randomNum2;// computing of numbers randomly generated and assignment of the result
        }    
        remainder = randomNum1 % randomNum2;

        answer = randomNum1 / randomNum2;
        
        // user's anwser is read and assigned to a variable
        userAns=Integer.parseInt(JOptionPane.showInputDialog("What is the answer to the following problem?"));

        // user's answer is tested to see whether it is correct or Incorrect
        if(answer==userAns)
        {
            ++userScore;
            JOptionPane.showMessageDialog(null,"*****"+userComments[randomNums.nextInt(2)]+" *****");
            tempQuestion += ": Your Answer was: "+userAns+" : Correct.";    
        }
        else//course of action taken if the above question was not properly answered
        {
            JOptionPane.showMessageDialog(null,"!!!!Sorry  Your Answer is Incorrect!!!!\nAnswer was : "+answer);
            tempQuestion += ": Your Answer was: "+userAns+" : Incorrect.";
            
        }
        testQuestions.add(tempQuestion);
        tempQuestion="";
            
        jTxtAnswer.setText(""+answer);
        answer =0;
    }
    public static int GeneratePositiveNums(int maxVal)
    {
        int tempNum = 0;

        do
        {
            tempNum = randomNums.nextInt(maxVal);

        }while(tempNum <= 0);

        return tempNum;
    }
    public static void Mode(String mode) throws IOException
    {
        choice = mode;
            switch(choice)
            {
                case "Add":
                    AdditionTest();
                    choice="Add";
                    break;
                case "Sub":
                    SubtractionTest();
                    choice="Sub";
                    break;
                case "Multi":
                    MultiplicationTest();
                    choice="Multi";
                    break;
                case "Div":
                    DivisionTest();
                    choice="Div";
                    break;
            }     
    } 
    public static void ReportWriter(String topic, ArrayList questions, int counter) throws IOException
    {
        fileWriter = new FileWriter(lNname+".txt",true);
        printWriter = new PrintWriter(fileWriter);
        printWriter.println("LearnerName        :       "+ lNname);// user's name is recorded to an external file
        printWriter.println("Session Date       :       "+date);// the date on which the user took a session is documented
        printWriter.println("Mode               :       Testing Mode");// the user's choice of Mode is recorded to a file
        printWriter.println("Topic              :       "+topic);// the user's choice of Topic is written to a file
        printWriter.println("#Questions         :       "+questionNum);// the user's total numbers of questions is written to a file
        printWriter.println("-----------------------------------------");// line to format the message is written to file
        printWriter.println("Questions");//Question sub heading
        printWriter.println("-----------------------------------------");// line to format the message is written to file
        printWriter.println();// empty line
        
        for(int i = 0; i < questions.size(); ++i)
        {
            printWriter.printf("%s",questions.get(i));
            printWriter.println();
        }
        
        printWriter.println();// empty line
        printWriter.println("-----------------------------------------");// line to format the message is written to file
        printWriter.println("Summary");// Summary heading
        printWriter.println("-----------------------------------------");// line to format the message is written to file
        printWriter.println("#Questions         :       "+questionNum);// Question numbers is  recorded
        printWriter.println("#Attempted         :       "+counter);// Number of questions attempted by the user is written to file
        printWriter.println("#Passed            :       "+userScore);// user's score is documented to the file
        printWriter.println("Score              :       "+userScore+"/"+counter);// what the user scored is displayed over the number of attempted questions
        printWriter.println();// drops the cursor to the next line
        printWriter.println("-----------------------------------------");// line to format the message is written to file
        printWriter.println();// drops the cursor to the next line
        printWriter.close();// file is closed
        
    }
    public void Learner()
    {
        try
        { 
            percent = (userScore*100)/questionNum;
            //loads jdbc driver
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            //creates a connection to the database.
            con = DriverManager.getConnection("jdbc:ucanaccess://Math Database.accdb");
            stmt = con.createStatement();
            String sql = "INSERT INTO Learner(name,testTopic,mark) "
                    + "VALUES('"
                    +lNname+"','"
                    +topicSelected+"','"
                    +percent+"%"+"')";

            stmt.executeUpdate(sql);
            //JOptionPane.showMessageDialog(TestMode.this, "Tutor Added");
            con.close();
                                
        }//end try
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(TestMode.this,e.getMessage());
        }
    }
    public static void SwapValues()
    {
        randomNum1 = randomNum1 + randomNum2;
        
        randomNum2 = randomNum1 - randomNum2;
        
        randomNum1 = randomNum1 - randomNum2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel jArithLabel;
    private javax.swing.JButton jBtnExit;
    private javax.swing.JButton jBtnNxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLblN1;
    private static javax.swing.JLabel jLblN2;
    private static javax.swing.JTextField jTxtAnswer;
    // End of variables declaration//GEN-END:variables
}
