/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathtutor;
import java.util.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Lenovo ThinkPad L520
 */
public class PracMode extends javax.swing.JFrame {

    /**
     * Creates new form SubrationPrac
     */
    static int randomNum1;// integer variable declared to hold the first randomly generated number
    static int randomNum2;
    static int answer;
    static Random randomNums = new Random();// a Random object randomNums instantiated, to generate numbers randomly
    static String choice;
    
    public PracMode() {
        initComponents();
        //this.setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTxtAnswer = new javax.swing.JTextField();
        jBtnExit = new javax.swing.JButton();
        jArithLabel = new javax.swing.JLabel();
        jBtnNxt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLblN1 = new javax.swing.JLabel();
        jLblN2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practice Mode");
        setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PRACTICE MODE");

        jTxtAnswer.setEditable(false);
        jTxtAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtAnswerActionPerformed(evt);
            }
        });

        jBtnExit.setBackground(new java.awt.Color(255, 51, 51));
        jBtnExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnExit.setForeground(new java.awt.Color(255, 255, 255));
        jBtnExit.setText("EXIT");
        jBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExitActionPerformed(evt);
            }
        });

        jArithLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jArithLabel.setText("-");

        jBtnNxt.setBackground(new java.awt.Color(0, 102, 255));
        jBtnNxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnNxt.setForeground(new java.awt.Color(255, 255, 255));
        jBtnNxt.setText("NEXT");
        jBtnNxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNxtActionPerformed(evt);
            }
        });

        jLabel2.setText("=");

        jLblN1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLblN1.setText("3");
        jLblN1.setName(""); // NOI18N

        jLblN2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLblN2.setText("2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jBtnNxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jBtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLblN1)
                            .addGap(18, 18, 18)
                            .addComponent(jArithLabel)
                            .addGap(18, 18, 18)
                            .addComponent(jLblN2)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jTxtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLblN2)
                    .addComponent(jArithLabel)
                    .addComponent(jLblN1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnNxt)
                    .addComponent(jBtnExit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtAnswerActionPerformed

    private void jBtnNxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNxtActionPerformed
        // TODO add your handling code here:       
        
        Mode(choice);
        
    }//GEN-LAST:event_jBtnNxtActionPerformed

    private void jBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExitActionPerformed
        // TODO add your handling code here:
        try 
        {
            int i = JOptionPane.showConfirmDialog(null, "Are You Sure","Select an Option",JOptionPane.YES_NO_OPTION);
            if (i==0)
            {
                new Menu().setVisible(true);
                this.dispose();
            }
        } // end try
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(PracMode.this,e.getMessage());
        } // end catch 
    }//GEN-LAST:event_jBtnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracMode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracMode().setVisible(true);
            }
        });
    }
    public static void AdditionPractice()
    {
        /* Method Name     : public static void AdditionPractice()
         * Purpose         : Ask the user Addition Mathmatics related Questions,
         *                 - for as long as the user respond by pressing the Next button otherwise,
         *                 - the program terminates presses the Exit and the Menu is redisplayed for the user to choose a different
         *                 - mode if the user is willing to give other Topics a try.
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        jArithLabel.setText("+");//sets arithmetic sign            
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 + randomNum2;// computing of numbers randomly generated and assignment of the result

        jTxtAnswer.setText(Integer.toString(answer));
//            //AstericGenerator(randomNum1, randomNum2, answer);                  
            
//            //System.out.println(randomNum1 + " + " + randomNum2 + " = "+answer);//an arithmatic expression is displayed for the user to calculate the answer
//            //System.out.println();// empty line
//            //System.out.println(asteric1 + " + "+ asteric2 + " = "+asteric3);// the above expression is repeated in another format for easy comprehension

////            asteric1 = "";// the contents of an instance's memory are reseted to an empty string
////            asteric2 = "";// the contents of an instance's memory are reseted to an empty string
////            asteric3 = "";// the contents of an instance's memory are reseted to an empty string            
    }  
    public static void SubtractionPractice()
    {
        /* Method Name     : public static void SubtractionPractice()
         * Purpose         : Ask the user Subtraction Mathmatics related Questions,
         *                 - for as long as the user respond by pressing the Next button otherwise,
         *                 - the program terminates presses the Exit and the Menu is redisplayed for the user to choose a different
         *                 - mode if the user is willing to give other Topics a try.
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        jArithLabel.setText("-");//sets arithmetic sign  
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        if(randomNum1 < randomNum2)
            SwapValues();//


        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 - randomNum2;// computing of numbers randomly generated and assignment of the result

        jTxtAnswer.setText(Integer.toString(answer));
//            AstericGenerator(randomNum1, randomNum2, answer);
//                    
//            
//            asteric1 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric2 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric3 = "";// the contents of an instance's memory are reseted to an empty string
//            
//        
    }
    public static void MultiplicationPractice()
    {
        /* Method Name     : public static void MultiplicationPractice()
         * Purpose         : Ask the user Addition Mathmatics related Questions,
         *                  - for as long as the user respond by pressing the Next button otherwise,
         *                  - the program terminates presses the Exit and the Menu is redisplayed for the user to choose a different
         *                  - mode if the user is willing to give other Topics a try.
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */

        jArithLabel.setText("*");//sets arithmetic sign 
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));

        answer = randomNum1 * randomNum2;// computing of numbers randomly generated and assignment of the result

        jTxtAnswer.setText(Integer.toString(answer));
 //           AstericGenerator(randomNum1, randomNum2, answer);
//
//            asteric1 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric2 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric3 = "";// the contents of an instance's memory are reseted to an empty string
            
    }
     public static void DivisionPractice()
    {
        /* Method Name     : public static void Division()
         * Purpose         : Ask the user Division related Questions,
         *                  - for as long as the user respond by pressing the Next button otherwise,
         *                  - the program terminates presses the Exit and the Menu is redisplayed for the user to choose a different
         *                  - mode if the user is willing to give other Topics a try.
         * Re-use          : Global variable name
         * Input           : None
         *
         * Output          : None
         */
        
        jArithLabel.setText("/");//sets arithmetic sign 
        randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
        randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

        jLblN1.setText(Integer.toString(randomNum1)); 
        jLblN2.setText(Integer.toString(randomNum2));
        
        if(randomNum1 < randomNum2)
            SwapValues();
        
        if(randomNum2 != 0)
            answer = randomNum1 / randomNum2;// computing of numbers randomly generated and assignment of the result
        
        jTxtAnswer.setText(Double.toString(answer));
        
            //AstericGenerator(randomNum1, randomNum2, answer);
            // System.out.println(asteric1 + " / "+ asteric2 + " = "+asteric3 + ": Remainder = "+AstericLoop(asteric4, (randomNum1 % randomNum2)));// the above expression is repeated in another format for easy comprehension
//
//            asteric1 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric2 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric3 = "";// the contents of an instance's memory are reseted to an empty string
    }
    public static void LCM_Practice()
    {
        
        int count;// integer variable declared
        int max;// integer variable declared
        answer = 0;

            randomNum1 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable
            randomNum2 = GeneratePositiveNums(10);// Random Class object used to randomly generate numbers within the specified range and assign it to a variable

            for(count = 2; count < (max = 500); ++ count)//for loop header, validation taking place
            {
                if(randomNum1 != 0 && randomNum2 != 0)// condition testing
                {
                    if(count % randomNum1 == 0 && count % randomNum2 == 0)// condition testing and computing of the lowest common multiple taking place
                    {
                        answer = count;// a lowest common multiple found and assigned go a variable.
                        count *= max;// loop early exit
                    }
                }
            }
            
            //AstericGenerator(randomNum1, randomNum2, answer);
            
//            System.out.println("The Lowest Common Multiple for : "+randomNum1 + " & " + randomNum2 + " = "+answer);//an arithmatic expression is displayed for the user to calculate the answer
//            System.out.println();// empty line
//            System.out.println("LCM for : "+ asteric1 + " & "+ asteric2 + " = "+asteric3);// the above expression is repeated in another format for easy comprehension

//
//            asteric1 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric2 = "";// the contents of an instance's memory are reseted to an empty string
//            asteric3 = "";// the contents of an instance's memory are reseted to an empty string
//            
            answer = 0;
    }
    public static int sMenu()
    {
        int x =0;
        if (Menu.jPracAdd.isSelected()==true)
        {
            x =1;
            AdditionPractice();
        }
            
        else if (Menu.jPracSub.isSelected())
            x =2;
        else if (Menu.jPracMulti.isSelected())
            x =3;
        else if (Menu.jPracDiv.isSelected())
            x =4;
        return x;

    }

    public static void SwapValues()
    {
        randomNum1 = randomNum1 + randomNum2;
        
        randomNum2 = randomNum1 - randomNum2;
        
        randomNum1 = randomNum1 - randomNum2;
    }
    public static int GeneratePositiveNums(int maxVal)
    {
        int tempNum = 0;
        
        do
        {
            tempNum = randomNums.nextInt(maxVal);
            
        }while(tempNum <= 0);
        
        return tempNum;
    }
    public static void Mode(String mode)
    {
        choice = mode;
            switch(choice)
            {
                case "Add":
                    AdditionPractice();
                    choice="Add";
                    break;
                case "Sub":
                    SubtractionPractice();
                    choice="Sub";
                    break;
                case "Multi":
                    MultiplicationPractice();
                    choice="Multi";
                    break;
                case "Div":
                    DivisionPractice();
                    choice="Div";
                    break;
            }     
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel jArithLabel;
    private javax.swing.JButton jBtnExit;
    private javax.swing.JButton jBtnNxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLblN1;
    private static javax.swing.JLabel jLblN2;
    private static javax.swing.JTextField jTxtAnswer;
    // End of variables declaration//GEN-END:variables

}
